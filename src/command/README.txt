 命令（Command）
意图

将命令封装成对象中，以便使用命令来参数化其它对象，或者将命令对象放入队列中进行排队，或者将命令对象的操作记录到日志中，以及支持可撤销的操作。
类图

    Command：命令
    Door：命令接收者，也就是命令真正的执行者
    Invoker：通过它来调用命令
    Client：可以设置命令与命令的接收者


2.1 优点

    类间解耦：调用者角色与接收者角色之间没有任何依赖关系，调用者实现功能时只需调用Command 抽象类的execute方法就可以，
    不需要了解到底是哪个接收者执行。
    可扩展性：Command的子类可以非常容易地扩展，而调用者Invoker和高层次的模块Client不产生严 重的代码耦合。
    命令模式结合其他模式会更优秀：命令模式可以结合责任链模式，实现命令族解析任务；结合模板方法模式，则可以减少 Command子类的膨胀问题。

2.2 缺点

命令模式也是有缺点的，请看Command的子类：如果有N个命令，问题就出来 了，
Command的子类就可不是几个，而是N个，这个类膨胀得非常大，这个就需要读者在项 目中慎重考虑使用。